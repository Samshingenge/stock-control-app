version: "3.9"
services:
  db:
    image: postgres:16-alpine
    container_name: stockctl-db
    restart: unless-stopped
    env_file: [.env]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: stockctl-backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
      - ./.env.backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "${BACKEND_PORT}:8000"
    volumes:
      - ./backend/app:/app/app
    command: ["sh", "-c", "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"]

  frontend:
    build: ./frontend
    container_name: stockctl-frontend
    depends_on: [backend]
    env_file: [.env, ./.env.frontend.example]
    ports:
      - "${FRONTEND_PORT}:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["sh", "-c", "npm run dev -- --host"]

volumes:
  db_data:
